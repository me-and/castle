[diff]
	algorithm = patience
	interHunkContext = 6
[difftool]
	prompt = false
[grep]
	lineNumber = true
[log]
	decorate = short
	mailmap = true
[mergetool]
	prompt = false
[push]
	default = simple
	autoSetupRemote = true
[rebase]
	autoSquash = true
[rerere]
	enabled = true
[svn]
	pushmergeinfo = true
[url "https://github.com/"]
	insteadOf = git://github.com/
[url "https://gist.github.com/"]
	insteadOf = git://gist.github.com/
[user]
	name = Adam Dinwoodie
[alias]
	# When using bashisms below (notably [[ ... ]]), make sure to invoke
	# bash explicitly -- on Debian, Git aliases beginning with "!" are
	# invoked in dash by default.

	# Simple short forms
	st = status
	co = checkout
	ci = commit
	h = help

	# More complicated shortcuts
	about = describe --all --always
	raw = show --format=raw
	full = show --format=full
	fuller = show --format=fuller
	amend = commit --amend -C HEAD
	ita = add --intent-to-add
	rm-cur-br = "!bash -c 'br=$(git symbolic-ref --short HEAD); git detach; if [[ $1 == -D ]]; then git branch -D $br; else git branch -d $br; fi' --"
	sth = status -- .
	detach = checkout --detach
	pullout = "!f() { git switch -C \"$1\" \"$1\"@{u}; }; f"
	qmerge = merge --no-edit
	pwl = push --force-with-lease

	# Logs
	lug = log -u

	# Graphical logs
	lol = log --graph --decorate --pretty=oneline --abbrev-commit
	lola = log --graph --decorate --pretty=oneline --abbrev-commit --all
	lols = log --graph --decorate --pretty=oneline --abbrev-commit --stat
	lolas = log --graph --decorate --pretty=oneline --abbrev-commit --all --stat

	# Repository information
	list-all-objs = "!f() { { git rev-list --objects --all; git rev-list --objects -g --all; git rev-list --objects $(git fsck --unreachable | grep '^unreachable' | cut -d' ' -f3);} | cut -d' ' -f1 | sort -u;}; f"
	roots = log --max-parents=0 --pretty=format:%H

	# Subversion shortcuts
	rev-to-hash = "!bash -c 'while getopts b: opt; do case $opt in b) branch=$OPTARG;; esac; done; shift $((OPTIND - 1)); while (( $# > 0 )); do count=0; for r in $(git svn find-rev r$1 $branch | sed -nr '/^[0-9a-f]{40}$/p'); do (( count++ )); echo $r; done; if (( count != 1 )); then echo \"Caution: found $count commits for r$1\" >&2; fi; shift; done' --"

	# Conflict handling
	conflicting = !bash -c '[[ -n $(git ls-files --unmerged) ]]'
	conflicts = "!cd ${GIT_PREFIX:-.}; git ls-files --unmerged | cut -f2 | sort -u"

	# Use to stash the current changes, perform an operation, then unstash
	# them.  Specifically, use `git stashed !!` in place of `git stash &&
	# !! && git stash pop`.
	stashed = "!f () { git stash save && \"$@\" && git stash pop; }; f"

	# Branch description management
	db = "!f () { if (( $# > 0 )); then branch=\"$1\"; else branch=\"$(git symbolic-ref --short HEAD)\" || exit 2; fi; git config --get branch.\"$branch\".description; }; f"

	# Repository description management
	dr = ! description_file=\"$(git rev-parse --git-dir)\"/description && cat \"$description_file\"
	sdr = "!f () { editor=\"$(git var GIT_EDITOR)\" && description_file=\"$(git rev-parse --git-dir)\"/description && if (( $# > 0 )); then echo "$@" > "$description_file"; else \"$editor\" \"$description_file\"; fi; }; f"

	# Fix the email address in the last commit
	fix-email = "!f () { git config user.email \"$1\" && git commit --amend --reset-author --no-edit; }; f"

	bivis = bisect visualize --graph --decorate --pretty=oneline --abbrev-commit
	git-ml-describe = show -s --pretty=reference
	mydescribe = show -s --pretty='format:%h (\"%s\")'
	duff = "!f(){ base64 -d<<</Td6WFoAAATm1rRGAgAhARwAAAAQz1jM4BZuBYJdABBuEi7B7j+c3vor3lHwy8/Qy8aeCQgp+xKwnoYdynnOPjSg4jnmw5oWPFO1tXovAUxuEuGUyS7IDfQTMho6iLkQ7eOak0occChW9kBQ8v5L8vlWXo5U6zpINc1xAJJA6vTZ2+2WTPHxhS9JcB3NSSb4iBER2N8qTjoTYOyEXgSaWuYYmPJBsQZZ18WMlzF6TGbvo50bHWNK5axJ91VT4x4q0VVXoo+l1/w6X5s23VUj9cRNrQ0wUVKP4/he51d9XO9pdggnL4iH8Knwr8iLYxqzCQjLrFxZf1PglITxmAH17hPc9A28o5YAImXLFR11sT0B2CjTn4xU/ulm/qQRrnxrRCOxcQ/ezak6DgKtU7NURpCEnDkz2kxhvl6olFo9UMmF8gx623w7VKr1Yod7J5vkYMJeo2cn5ULWJtKNQdh88oAwXuHmdyA881havulWofCeoymkuK94xtGHy1qIl5PlASwggZhD2+g/jf3eO1LJ0FPUw8bpTFgTaq2Zxcu+DEhlNCJAbpTDyUsCKntCEwr0d40zdxPMnABWfl+pChmO63QBVQ9hobdPRsAB5094SjXi5DwmpGzyip7b5HwaXkwtcnM9lOWUTaMkUTltS6S+VFLkRje9TS21BAOkdfSh4W15GiqvkrxKELs/OzwegH7zZ2DnKnHLYl4cDSdRyPhXay7bVv7lowidY7lEtyUlDIpt3RBeu0Eoqxjm/yQ4xesLm4KgQ37EsulCY0YBmGkfa9/Uxoc081V3aN9cn7dT63GA3qIhfdITbQHjHMPcsv2dWqIRsZQUZtEH5r0i8mFlYGqv0bIZuJfEhLOD6rwfcoW3jbTuhLMk/S0Mk91B2IhgDZQiU/PDaHHlabbYRxAfGgesIXgEdTdT7oGkkg6lMpzP0Xf3emdU8Y3N5zapgZZ1RQ6naIutOQoWRXkOuy8pUFCR6aFoWD5PLjKO3Y7CzWI3T2Q4JxPI9uy2jV8WARZ3JJOWZzU/BCmKOyraJvjdtpsJxF4OrarcJ+PHEnS1bMkZh6RuPYllXxP5dEZWrrnkkc8TVfxh4I2CfZddiJkMhJxZxzMd623Qsc9zdn3pmvWjCtSkV5nUnic+o9U1kGzSA/0jCOd0MCHxYY/seqdrk9KGkEO/laDW/Z6e+kfRmcZcFd9NMbUAOf+IB02lEhSXHePx7mfRg7MKHYIkb+cs4jPAx7clBbDwZDputznXlZUDAs/ysrUY9jbuinlThJ4kx/oU98ZCVhlqSbG8ytEnaFZ03M0+5uIxKMX/yLp/XUIeq/Y13Gplt7WqeNDUZQ9f4pYrGjC+P0jvpscAG5LH+bxErGaVQRUoV6hlngqfTaXYgEbfgwv5v97ZWvFRv/RFu0zGv0NETAhM18H1KQ+GEO6gLiJ9DI6pnRqyfUWXTJfFAyWQJTex+++gcxVgLwRATzf60AQ39ORvgVG4SZ87zJHTDMRaW10swq/iINESNZxhYvDKtTJAVdHtOoTyKaSPeyJK1GVL+YIP+25HptAW+QI6TZ2+kA2/cw+voIzhnqinm4lfpFyUmUNAvTzShHXSG/JiZvDQr1HO1a46Cbw2ON+0EeHFGK5RwGkg6i3GIM0WN3W+CB8Y/atnLhU58bULpPzaaaES5xZB13UJuglB9wme2QPHyndqMI9l3N0AFrqqIMUCBXFSfwKdSS1imxXOinaaojfkwG3OTOrRNWVrorCi79hjb5ku08bVUwTdJnqTLikngCkirCilk/QpMmXyi7ACxuImtRrtpF/MUcWjuXH3cgjEVLS0UQVUjtJP7Ot6+KCi6DNxpXkG7yjY8Ax0XDRYO+HoXjHhQBf2NEM5cxqZnx/hUNz/nl+8fjQlCHXLebNmS1cRVUgb6kl1MzA7AAAAAI6XfY24obPPAAGeC+8sAAAVfKIsscRn+wIAAAAABFla|xz -dc;};f"
[core]
	pager = less -S
[sendemail]
	confirm = always
	annotate = true
	suppresscc = self
	envelopeSender = auto
[pull]
	ff = only
[init]
	defaultBranch = main
[safe]
	directory = /etc/nixos
	directory = /etc/nixos/.git
[include]
	# Put this at the bottom, so local values will override general ones.
	path = ~/.config/git/localconfig
