# Files; locations per XDG Base Directory spec and task 2.6.0 changelog docs,
# but hardcoded to handle the case where XDG_DATA_HOME etc aren't set.
data.location=~/.local/share/task/
hooks.location=~/.config/task/hooks/

# Color theme (uncomment one to use)
#include /usr/share/taskwarrior/light-16.theme
#include /usr/share/taskwarrior/light-256.theme
#include /usr/share/taskwarrior/dark-16.theme
#include /usr/share/taskwarrior/dark-256.theme
#include /usr/share/taskwarrior/dark-red-256.theme
#include /usr/share/taskwarrior/dark-green-256.theme
#include /usr/share/taskwarrior/dark-blue-256.theme
#include /usr/share/taskwarrior/dark-violets-256.theme
#include /usr/share/taskwarrior/dark-yellow-green.theme
#include /usr/share/taskwarrior/dark-gray-256.theme
#include /usr/share/taskwarrior/dark-gray-blue-256.theme
#include /usr/share/taskwarrior/solarized-dark-256.theme
#include /usr/share/taskwarrior/solarized-light-256.theme
#include /usr/share/taskwarrior/no-color.theme

# Recur after completion fields
uda.recurAfterDue.type=duration
uda.recurAfterDue.label=Rec. after due
uda.recurAfterWait.type=duration
uda.recurAfterWait.label=Rec. after wait
uda.recurAfterModifications.type=string
uda.recurAfterModifications.label=Rec. after changes

# next filter: don't show full annotations, just a count of them, and hide
# "waitingfor" tasks that I'm still waiting for.
report.next.columns=id,start.age,entry.age,depends,priority,project,tags,recur,scheduled.countdown,due.relative,until.remaining,description.count,urgency
report.next.filter=( status:pending or ( -COMPLETED -DELETED +inbox ) ) ( -waitingfor or +OVERDUE or due.none: or +inbox ) ( -BLOCKED or +inbox ) limit:page

# "Until" behaviour on recurring tasks
uda.recurTaskUntil.type=duration
uda.recurTaskUntil.label=Child until

# Field for handling recurAfter rounding.
uda.recurAfterWaitRoundDown.type=string
uda.recurAfterWaitRoundDown.label=Wait round down
uda.recurAfterDueRoundDown.type=string
uda.recurAfterDueRoundDown.label=Due round down

# Record where tasks came from
uda.source.type=string
uda.source.label=Source

# Stuff for tasksh's review process
uda.reviewed.type=date
uda.reviewed.label=Reviewed
report._reviewed.description=Tasksh review report.  Adjust the filter to your needs.
report._reviewed.columns=uuid
report._reviewed.sort=problems,reviewed+,modified+
report._reviewed.filter=( reviewed.none: or reviewed.before:now-6days or problems.any: ) -COMPLETED -DELETED
report._reviewed.context=0

# Don't show logs in task info -- it's not worth the screen space
journal.info=off

# Use inherited urgency for blocked tasks: tasks have the highest urgency of
# their own urgency or whatever they're blocking.  Do reduce the priority
# slighty for things that are blocked, just to make sure they don't overtake
# the blocking tasks.
urgency.blocking.coefficient=0.1
urgency.blocked.coefficient=0
urgency.inherit=1

# Report on tasks I'm waiting for
report.waitingfor.description=Tasks where I'm waiting on others
report.waitingfor.filter=+waitingfor status:pending -BLOCKED limit:page
report.waitingfor.columns=id,start.age,project,tags,due.relative,until.remaining,description
report.waitingfor.sort=due+,id+
report.waitingfor.labels=ID,Age,Proj,Tag,Due,Until,Description
report.waitingfor.context=0

report.waitingfor-full.description=All tasks where I'm waiting on others
report.waitingfor-full.filter=+waitingfor (status:pending or status:waiting)
report.waitingfor-full.columns=id,start.age,project,tags,depends,wait.remaining,due.relative,until.remaining,description
report.waitingfor-full.sort=due+,urgency-
report.waitingfor-full.labels=ID,Age,Proj,Tag,Dep,Wait,Due,Until,Description
report.waitingfor-full.context=0

# Don't use context with the oldest/newest/all reports, since those are ones
# where I want to see everything.
report.oldest.context=0
report.newest.context=0
report.all.context=0

# More useful columns for the oldest and newest reports
report.oldest.columns=id,start.age,entry.age,modified.age,depends.indicator,status.short,priority,project,tags,recur.indicator,wait.remaining,scheduled.relative,due.relative,until.relative,description,urgency
report.oldest.labels=ID,Active,Age,Mod,D,S,P,Proj,Tag,R,Wait,Sch,Due,Until,Description,Urg
report.newest.columns=id,start.age,entry.age,modified.age,depends.indicator,status.short,priority,project,tags,recur.indicator,wait.remaining,scheduled.relative,due.relative,until.relative,description,urgency
report.newest.labels=ID,Active,Age,Mod,D,S,P,Proj,Tag,R,Wait,Sch,Due,Until,Description,Urg

# Rejig priorities: I want L to mean "explicitly low", and to rescore
# accordingly.
uda.priority.values=H,M,,L
urgency.uda.priority.H.coefficient=6.0
urgency.uda.priority.M.coefficient=1.8
urgency.uda.priority.L.coefficient=-1.8

# I have a big shell prompt, so allow multiple lines for it.
reserved.lines=3

# Context: evening and weekend
context.evening-weekend.read=-business -linaker -dadford -work

# Context: allotment
context.allotment.read=-home -linaker -dadford -enfield -work

# Context: day off.  Prioritise things that can only be done in business hours.
context.day-off.read=-linaker -dadford -work
context.day-off.rc.urgency.user.tag.business.coefficient=6

# Context: work.  Prioritise things that can only be done at work or in
# business hours
context.work.read=-linaker -dadford -multivac -allotment -nsfw -alex
context.work.rc.urgency.user.tag.work.coefficient=10
context.work.rc.urgency.user.tag.business.coefficient=4

# Context: dadford.  Prioritise things that can only be done on site.
context.dadford.read=-home -linaker -enfield -business
context.dadford.write=+dadford
context.dadford.rc.urgency.user.tag.dadford.coefficient=10

# Context: linaker.  Prioritise things that can only be done there.
context.linaker.read=-allotment -enfield -dadford -home -work
context.linaker.rc.urgency.user.tag.linaker.coefficient=20

# Context: bed.
context.bed.read=-home -linaker -dadford -enfield -daylight -work -pc -multivac -audio -business -alex

# Default urgency coefficients for things that have context-specific urgencies,
# otherwise the context-specific ones seem to not take effect.
urgency.user.tag.work.coefficient=0
urgency.user.tag.business.coefficient=0
urgency.user.tag.dadford.coefficient=0
urgency.user.tag.linaker.coefficient=0

# Tasks in the inbox should be right at the top to get sorted, unless there is
# something even more burningly urgent.
urgency.user.tag.inbox.coefficient=20

# Tasks tagged "later" should be significantly less urgent than they otherwise
# might.  This is an alternative to using "wait:later" or similar, since
# "wait:later" seems to break TaskServer sync :(
urgency.user.tag.later.coefficient=-10

# More useful "completed" report details, limited to only showing a sensible
# number of most recently completed tasks.
report.completed.columns=uuid.short,end.age,priority,project,tags,due,description
report.completed.labels=UUID,Done,P,Proj,Tags,Due,Description
report.completed.filter=status:completed limit:page
report.completed.sort=end-

# Taskwarrior seems confused about whether tasks that are waiting should be
# included in status:pending or not.  The default report definitions seem to
# assume they will be, but the behaviour assumes they won't be.  Change the
# report definitions to match actual behaviour.
report.active.filter=status:pending +ACTIVE
report.blocked.filter=status:pending +BLOCKED
report.blocking.filter=status:pending +BLOCKING
report.list.filter=status:pending
report.long.filter=status:pending
report.ls.filter=status:pending
report.minimal.filter=status:pending or status:waiting
report.newest.filter=status:pending or status:waiting
report.oldest.filter=status:pending or status:waiting
report.overdue.filter=(status:pending or status:waiting) and +OVERDUE
report.recurring.filter=((status:pending or status:waiting) +CHILD) or (status:recurring +PARENT)
report.timesheet.filter=((status:pending or status:waiting) start.after:now-4wks) or (status:completed end.after:now-4wks)
report.unblocked.filter=status:pending -BLOCKED
report.waiting.filter=status:waiting

# Show full project names in the "all" report.
report.all.columns=id,status.short,uuid.short,start.active,entry.age,end.age,depends.indicator,priority,project,tags.count,recur.indicator,wait.remaining,scheduled.remaining,due,until.remaining,description

# Record problems
uda.problems.label=Problems
uda.problems.type=string

# When creating recurring tasks, create two of them so I get at least a couple
# of days for daily tasks.
recurrence.limit=2

# More readable date formats.
dateformat.info=a d b Y H:N:S

# Default to something that'll show blocked and waiting tasks, as that's
# probably what I want if I'm using a filter without specifying a report.
default.command=oldest

# Local include, in particular for disabling recurrence on secondary systems.
include ~/.config/task/localtaskrc

# Search case insensitive.  I don't want to remember whether the word I'm
# thinking of in a description is at the start of the description or not.
search.case.sensitive=0

# I don't care whether a task is associated with a project or not.
urgency.project.coefficient=0
urgency.tags.coefficient=0
urgency.annotations.coefficient=0

# If a task can only be done during daylight, bump the priority slightly so I
# get to it when it's available
urgency.user.tag.daylight.coefficient=1

# I do care about age; I want older tasks to bubble up to the top of my queue.
urgency.age.coefficient=4

# Don't merge colours.  It makes the text for tasks that are blocking and
# tagged +next unreadable.  Longer-term I might prefer to improve the colour
# scheme, but this is good enough for now.
rule.color.merge=0

# Don't tell me about not completing the highest priority task; I know!
nag=

# Don't ask if I want to change every instance of a recurring task.  The vast
# majority of the time I don't, and if I do, I can ask for that.
recurrence.confirmation=no

# Don't renumber tasks on every filter/list command, and instead make
# renumbering a manual step that can happen overnight or similar.
gc=0

# Stuff Taskwarrior has added itself
news.version=2.6.0
