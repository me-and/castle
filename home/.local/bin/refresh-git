#!/usr/bin/env bash
set -eu

GIT_SRC_DIR=${GIT_SRC_DIR:-~/vcs/git}
GIT_INSTALL_DIR=${GIT_INSTALL_DIR:-~/.local}
GIT_BUILD_COMMIT=${GIT_BUILD_COMMIT:-origin/main}
GIT_BUILD_THREADS=${GIT_BUILD_THREADS:-$(($(nproc) + 1))}
GIT_BUILD_TEST=${GIT_BUILD_TEST-YesPlease}
GIT_BUILD_FORCE=${GIT_BUILD_FORCE-}

cd "$GIT_SRC_DIR"

# Find a version of Git to use.  Prefer versions likely to have been more
# thoroughly tested and therefore more reliable, in the name of avoiding
# bootstrap problems when getting an up-to-date Git build.
for git in /usr/bin/git /usr/local/bin/git "${GIT_INSTALL_DIR}/bin/git" "$(which git)"; do
	[[ -x "$git" ]] && break
done

"$git" fetch

# Check if it's even necessary to do anything.  This always uses the version of
# Git that we're trying to install, since that's the one we'll be replacing,
# and if it doesn't exist or is somehow invalid, the test should also fail and
# cause the script to continue.
if [[ -z "$GIT_BUILD_FORCE" ]] && "${GIT_INSTALL_DIR}/bin/git" version | grep -Fq "$("$git" describe "$GIT_BUILD_COMMIT" | sed 's/-/./g;s/v//')"; then
	exit 0
fi

"$git" checkout "$GIT_BUILD_COMMIT"

# If AsciiDoctor is available, prefer that to asciidoc.
if command -v asciidoctor >/dev/null; then
	export USE_ASCIIDOCTOR=YesPlease
fi

make -j "$GIT_BUILD_THREADS" configure
./configure --prefix="$GIT_INSTALL_DIR" --with-libpcre
[[ "$GIT_BUILD_TEST" ]] && make -j "$GIT_BUILD_THREADS" test
make -j "$GIT_BUILD_THREADS" install install-man

# vim: ft=bash noet ts=8
